# -*- mode: ruby -*-
# vi: set ft=ruby :

$LOAD_PATH.unshift File.dirname(__FILE__)

require "master.rb"
require "node.rb"
require "rhost.rb"


nodesCount = Integer(ENV['KD_NODES_COUNT'] || '1')
rhostsCount = Integer(ENV['KD_RHOSTS_COUNT'] || '0')

oneUsername = ENV['KD_ONE_USERNAME'] || ''
onePassword = ENV['KD_ONE_PASSWORD'] || ''
oneURL      = ENV['KD_ONE_URL'] || 'https://some.nebula.host.com:2633/RPC2'
privateKey  = ENV['KD_ONE_PRIVATE_KEY'] || '~/.ssh/id_rsa'

nebulaTemplateId = Integer(ENV['KD_NEBULA_TEMPLATE_ID'] || '174')

Vagrant.configure(2) do |config|
  config.vm.box = "bento/centos-7.2"

  config.ssh.username = 'root'
  config.ssh.insert_key = 'true'

  #Disable default sync folder
  config.vm.synced_folder ".", "/vagrant", disabled: true

  rsyncExcludes = [".git/", ".venv/", "ceph_settings.py"]

  gitignoreFile = File.expand_path("../../../.gitignore", __FILE__)
  if File.readable?(gitignoreFile)
    File.open(gitignoreFile) do |f|
      f.each_line do |line|
        line.chomp!
        next if line.empty? 
        rsyncExcludes << line
      end
    end
  end

  config.vm.provider "virtualbox" do |vb, override|
    override.ssh.password = 'vagrant'
  end

  config.vm.provider :opennebula do |one, override|
    one.endpoint = oneURL
    one.username = oneUsername
    one.password = onePassword
    one.template_id = nebulaTemplateId
    override.ssh.private_key_path = privateKey
  end

  if nodesCount > 0
      (1..nodesCount).each do |i|
          config.vm.define "kd_node#{i}" do |node|
              config_node(node, i)
          end
      end
  end

  if rhostsCount > 0
      (1..rhostsCount).each do |i|
          config.vm.define "kd_rhost#{i}" do |rhost|
              config_rhost(rhost, i)
          end
      end
  end

  config.vm.define "kd_master" do |master|
      if ARGV[0] == "gatling-rsync-auto" || ARGV[0] == "rsync-auto"
          master.vm.synced_folder "../../", "/var/opt/kuberdock", type: "rsync", rsync__exclude: rsyncExcludes
          master.gatling.rsync_on_startup = false
      end
      config_master(master, nodesCount, rhostsCount)
  end
end
