#
# KuberDock - is a platform that allows users to run applications using Docker
# container images and create SaaS / PaaS based on these applications.
# Copyright (C) 2017 Cloud Linux INC
#
# This file is part of KuberDock.
#
# KuberDock is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# KuberDock is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with KuberDock; if not, see <http://www.gnu.org/licenses/>.
#
apiVersion: v1
kind: ReplicationController
metadata:
  name: $APP_NAME|default:redis| Enter your application name$
kuberdock:
  packageID: 0
  preDescription: |
    You are installing the application [b]Redis[/b].
    Redis is an open source key-value store that functions as a data structure server.
    Choose the amount of resources or use recommended parameters set by default.
    First choose package.
    When you click "Order now", you will get to order processing page.
  postDescription: |
    You have installed [b]Redis![/b]
    Please find more information about Redis software on the official website [url]http://redis.io/[/url]
    To access [b]Redis[/b] use:
    [b]Host:[/b] %PUBLIC_ADDRESS%
    [b]Port:[/b] $REDIS_HOST_PORT$

  # required for cPanel to do proxy to user`s domain
  # proxy:
    # root:
      # container: redis
      # domain: $APP_DOMAIN|default:user_domain_list|Select application domain$
  appPackages:
    - name: S
      goodFor: beginner
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 0
          containers:
            - name: redis
              kubes: 1
          persistentDisks:
            - name: redis-persistent-storage
              pdSize: 1
    - name: M
      recommended: yes
      goodFor: regular use
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 1
          containers:
            - name: redis
              kubes: 2
          persistentDisks:
            - name: redis-persistent-storage
              pdSize: 2
    - name: L
      goodFor: business
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 2
          containers:
            - name: redis
              kubes: 4
          persistentDisks:
            - name: redis-persistent-storage
              pdSize: 4
spec:
  template:
    metadata:
      labels:
        name: $APP_NAME$
    spec:
      volumes:
        - name: redis-persistent-storage
          persistentDisk:
            pdName: redis_$PD_RAND|default:autogen|PD rand$
      restartPolicy: "Always"
      containers:
        -
          name: redis
          image: redis:3
          ports:
            - containerPort: 6379
              podPort: $REDIS_HOST_PORT|default:6379|Enter Redis host port$
              isPublic: True
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 1
          volumeMounts:
            - mountPath: /data
              name: redis-persistent-storage
          workingDir: /data

