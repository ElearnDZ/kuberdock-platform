#!/bin/bash
# install kubernetes components on Node host

echo "Set locale to en_US.UTF-8"
export LANG=en_US.UTF-8

# TODO change rules, not disable
echo "Setting up firewall rules..."
systemctl stop firewalld
systemctl disable firewalld

echo "Using MASTER_IP={{ master_ip }}"



# 1. create yum repo file

cat > /etc/yum.repos.d/kube-cloudlinux.repo << EOF
[kube]
name=kube
baseurl=http://repo.cloudlinux.com/kubernetes/x86_64/
enabled=1
gpgcheck=1
gpgkey=http://repo.cloudlinux.com/cloudlinux/security/RPM-GPG-KEY-CloudLinux
EOF



# 1.1 import CloudLinux key
rpm --import http://repo.cloudlinux.com/cloudlinux/security/RPM-GPG-KEY-CloudLinux



# 2. install components
echo "Installing kubernetes..."
yum -y install kubernetes
yum -y install flannel



# 3. configure Node config
echo "Configuring services..."
cat > /etc/kubernetes/config << EOF
###
# kubernetes system config
#
# The following values are used to configure various aspects of all
# kubernetes services, including
#
#   kubernetes-apiserver.service
#   kubernetes-controller-manager.service
#   kubernetes-scheduler.service
#   kubelet.service
#   kubernetes-proxy.service

# Comma seperated list of nodes in the etcd cluster
KUBE_ETCD_SERVERS="--etcd_servers=http://{{ master_ip }}:4001"

# logging to stderr means we get it in the systemd journal
KUBE_LOGTOSTDERR="--logtostderr=true"

# journal message level, 0 is debug
KUBE_LOG_LEVEL="--v=0"

# Should this cluster be allowed to run privleged docker containers
KUBE_ALLOW_PRIV="--allow_privileged=false"
EOF



# 4. configure Node kubelet

cat > /etc/kubernetes/kubelet << EOF
###
# kubernetes kubelet (Node) config

# The address for the info server to serve on (set to 0.0.0.0 or "" for all interfaces)
KUBELET_ADDRESS="--address=0.0.0.0"

# The port for the info server to serve on
KUBELET_PORT="--port=10250"

# You may leave this blank to use the actual hostname
KUBELET_HOSTNAME=""

# Add your own!
KUBELET_ARGS=""
EOF



# 5. configure Flannel

cat > /etc/sysconfig/flanneld << EOF
# Flanneld configuration options

# etcd url location.  Point this to the server where etcd runs
FLANNEL_ETCD="http://{{ master_ip }}:4001"

# etcd config key.  This is the configuration key that flannel queries
# For address range assignment
FLANNEL_ETCD_KEY="/kuberdock/network/"

# Any additional options that you want to pass
FLANNEL_OPTIONS="--iface={{ inet_iface }}"
EOF



# 6. Setting kernel parameters
sysctl -w net.ipv4.ip_nonlocal_bind=1
cat > /etc/sysctl.d/75-kuberdock.conf << EOF
net.ipv4.ip_nonlocal_bind = 1
EOF



# 7. enable services
echo "Starting services..."
systemctl enable flanneld; systemctl restart flanneld
systemctl enable docker; systemctl restart docker
systemctl enable kubelet; systemctl restart kubelet
systemctl enable kube-proxy; systemctl restart kube-proxy
#systemctl enable cadvisor; systemctl restart cadvisor
